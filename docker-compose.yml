version: '3.4'
networks:
  constr-sw:
volumes:
  constr-sw-postgresql-data:
    external: true
  constr-sw-mongodb-data:
    external: true
  constr-sw-keycloak-data:
    external: true
services:
  # PostgreSQL
  postgresql:
    container_name: postgresql
    image: postgres:latest
    ports:
      - 5432:5432
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=a12345678
    volumes:
      - constr-sw-postgresql-data:/var/lib/postgresql/data
    networks:
      - constr-sw
  # MongoDB
  mongodb:
    container_name: mongodb
    image: mongo:latest
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=a12345678
    volumes:
      - constr-sw-mongodb-data:/data/mongodb
    networks:
      - constr-sw
  # Keycloak
  keycloak:
    container_name: keycloak
    image: jboss/keycloak:latest
    ports:
      - 8090:8080
    environment:
      - KEYCLOAK_USER=admin
      - KEYCLOAK_PASSWORD=a12345678
      - KEYCLOAK_FRONTEND_URL=https://localhost:8090/auth
    volumes:
      - constr-sw-keycloak-data:/opt/jboss/keycloak/standalone/data
      - keycloak/constr-sw-realm.json:/tmp/realm.json
    command:
      - -Dkeycloak.migration.action=import -Dkeycloak.migration.provider=singleFile -Dkeycloak.migration.file=/tmp/realm.json -Dkeycloak.migration.strategy=OVERWRITE_EXISTING
    networks:
      - constr-sw
  # Authentication
  auth-api:
    container_name: auth-api
    build: ./backend/auth
    environment:
      - CLIENT_KEYCLOAK_URL=http://keycloak:8090/auth
      - KEYCLOAK_CLIENT_ID=constr-sw
      - KEYCLOAK_CLIENT_SECRET=MZ4EEGhkDYe1nghFmxj4GPimTRPs9OLT
      - AUTH_SERVER_PORT=8080
    ports:
      - 8080:8080
    networks:
      - constr-sw
    depends_on:
      - keycloak
  # Buildings
  buildings-api:
    container_name: buildings-api
    build: ./backend/buildings/buildings-classrooms
    environment:
      - API_PORT=8081
      - KEYCLOAK_API_HOST=auth
      - KEYCLOAK_API_PORT=8080
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=27017
      - MONGODB_USER=admin
    ports:
      - 8081:8081
    networks:
      - constr-sw
    depends_on:
      - mongodb
  # Resources
  resources-api:
    container_name: resources-api
    build: ./backend/resources/resources-api
    environment:
      - DB_HOST=postgresql
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=a12345678
      - SPRING_CONFIG_LOCATION=/app/src/main/resources/application.properties
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgresql:5432/
    ports:
      - 8082:8082
    networks:
      - constr-sw
    depends_on:
      - postgresql
  # Reservations
  reservations-api:
    container_name: reservations-api
    build: ./backend/reservations/reservations-api
    ports:
      - 8083:8083
    environment:
      - NODE_ENV=production
      - DB_HOST=postgresql
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=a12345678
      - KEYCLOAK_API_SERVER_URL=http://auth:3000
      - RESOURCES_API_SERVER_URL=http://resources-api:8082
      - RESOURCES_API_MOCK=false
    networks:
      - constr-sw
    depends_on:
      - postgresql
  # Classes
  classes-api:
    container_name: classes-api
    build: ./backend/classes/classrooms
    environment:
      - KEYCLOAK_API_HOST=auth
      - KEYCLOAK_API_PORT=8080
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=27017
      - MONGODB_USER=admin
      - MONGODB_PASSWORD=a12345678
      - API_PORT=8085
    ports:
      - 8085:8085
    networks:
      - constr-sw
    depends_on:
      - mongodb
  # Courses
  courses-api:
    container_name: courses-api
    build: ./backend/courses/disciplines
    environment:
      - KEYCLOAK_API_HOST=auth
      - KEYCLOAK_API_PORT=8080
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=27017
      - MONGODB_USER=admin
      - MONGODB_PASSWORD=a12345678
      - API_PORT=8086
    ports:
      - 8086:8086
    networks:
      - constr-sw
    depends_on:
      - mongodb
  # Lessons
  lessons-api:
    container_name: lessons-api
    build: ./backend/lessons
    environment:
      - SERVER_PORT=8080
      - SWAGGER_CUSTOM_SERVER=https://8092-pucrspoli-constrsw20222-5uwu1stt2g9.ws-us77.gitpod.io
      - POSTGRES_HOST=postgresql
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=a12345678
      - SERVICE_ROOMS_MOCKED=false
      - SERVICE_GROUPS_MOCKED=true
      - SERVICE_RESERVATIONS_MOCKED=false
      - CLIENT_AUTH_URL=http://gateway:80
      - CLIENT_ROOMS_URL=http://gateway:80/classrooms
      - CLIENT_RESERVATIONS_URL=http://gateway:80/reservations
      - CLIENT_GROUPS_URL=http://gateway:80/groups
    ports:
      - 8087:8080
    networks:
      - constr-sw
    depends_on:
      - postgresql

  # Gateway
  gateway:
    container_name: gateway
    image: nginx:alpine
    volumes:
      - ./gateway:/etc/nginx/templates
    ports:
      - 80:80
    networks:
      - constr-sw
    depends_on:
      - auth-api
      - buildings-api
      - resources-api
      - reservations-api
      - classes-api
      - courses-api
      - lessons-api

  # Frontend
  frontend:
    container_name: frontend
    build: ./frontend
    environment:
      - PORT=80
      - ENV_NAME=production
    networks:
      - constr-sw
    depends_on:
      - gateway
